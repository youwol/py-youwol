[project]
name = "youwol"
version = "0.1.0rc"
authors = [
    { name = "G. Reinisch", email = "greinisch@youwol.com" },
    { name = "J. Decharne", email = "jdecharne@youwol.com" },
]
description = "YouWol as a desktop application"
readme = "README.md"
requires-python = "~=3.8"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "aiohttp>=3.8.1,<4.0.0",
    "aiostream>=0.4.4,<0.5.0",
    "appdirs>=1.4.4,<2.0.0",
    "Brotli>=1.0.9,<2.0.0",
    "colorama>=0.4.5,<0.5.0",
    "cowpy>=1.1.5,<2.0.0",
    "deepdiff>=5.8.1,<6.0.0",
    "fastapi>=0.92.0,<0.93.0",
    "importlib-resources>=5.10.2,<5.11.0",
    "minio>=7.1.9,<8.0.0",
    "Pillow>=9.3.0,<10.0.0",
    "psutil>=5.9.1,<6.0.0",
    "pyparsing>=3.0.9,<4.0.0",
    "python-daemon>=2.3.0,<3.0.0",
    "python-multipart>=0.0.5,<0.0.6",
    "pyyaml>=6.0,<7.0",
    "pyjwt[crypto]>=2.4.0,<3.0.0",
    "redis>=4.3.4,<5.0.0",
    "tqdm>=4.64.1,<5.0.0",
    "uvicorn>=0.18.2,<0.19.0",
    "websockets>=10.3,<11",
    "semantic_version>=2.10.0,<3.0.0",
    "watchdog>=2.1.9,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pip-tools",
]
qa = [
    "coverage",
    "pycodestyle",
    "pip-audit",
    "tomli",
    "tomli-w",
]
publish = [
    "pdoc3",
    "build",
    "twine",
    "tomli-w",
]

[project.scripts]
youwol = "youwol.main:main"

[build-system]
requires = [
    "setuptools",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = [
    "./",
]
include = [
    "youwol*",
]

[tool.setuptools.package-data]
"youwol.routers.environment" = [
    "fortunes.txt",
]
youwol_flux_backend = [
    "bundle_app_template/*",
]
"youwol.pipelines.pipeline_typescript_weback_npm.regular" = [
    "templates/.*",
    "templates/*",
    "templates/**/*",
    "templates/.**/*",
]
"youwol.pipelines.pipeline_typescript_weback_npm.external" = [
    "templates/.*",
    "templates/*",
    "templates/**/*",
    "templates/.**/*",
]

[tool.coverage.run]
branch = true
relative_files = true
data_file = "coverage.coverage"
debug = "sys,config,pathmap"
