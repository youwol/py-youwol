---

name: Nightly

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  schedule:
    - cron: '34 3 * * *'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      python_versions: ${{ steps.get_version_details.outputs.python_versions }}
      package: ${{ steps.get_version_details.outputs.package }}
      config_dir: ${{ steps.get_version_details.outputs.config_dir }}

    steps:

      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Prepare Python 3.12
        id: prepare_python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Build Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-publish.txt

      - name: Get current version details
        id: get_version_details
        run: |
          version=$(python version_management.py get_current)
          python_versions_json=$(python version_management.py python_versions)
          commit=$(git log -1 --pretty=%h)
          echo python_versions=${python_versions_json} >> $GITHUB_OUTPUT
          echo package="py-youwol_package"  >> $GITHUB_OUTPUT
          echo config_dir="config_dir_integration" >> $GITHUB_OUTPUT
        shell: sh

      - name: Build
        id: build
        run: python -m build
        shell: sh

      - name: Upload Build Artifacts
        id: upload_artifact_rc
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_version_details.outputs.package }}
          path: dist/youwol-${{ steps.bump_version.outputs.version }}*
          retention-days: 1

      - name: Upload Artifact for configuration integration tests
        id: upload_artifact_conf_integration
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_version_details.outputs.config_dir }}
          path: integrations/
          retention-days: 1


  tests:
    name: "Test ${{ matrix.install_from }} \
      on ${{ matrix.runs_on }} \
      with Python ${{ matrix.python_version }}"
    runs-on: ${{ matrix.runs_on }}
    needs: build
    continue-on-error: true
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        python_version: ${{ fromJson(needs.build.outputs.python_versions) }}
        install_from:
          - tarball
          - wheel
        runs_on:
          - ubuntu-latest
          - macos-latest

    steps:
      - name: Prepare Python ${{ matrix.python_version }}
        id: prepare_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Download Package
        id: download_package
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.package }}

      - name: Install from wheel
        if: ${{ contains(matrix.install_from, 'wheel') }}
        id: install_wheel
        run: |
          pipx install ./youwol-*.whl

      - name: Install from tarball sources
        if: ${{ contains(matrix.install_from, 'tarball') }}
        id: install_tarball
        run: |
          pipx install ./youwol*.tar.gz

      - name: Prepare http-clients
        id: prepare_http-clients
        uses: youwol/nestor/ts/prepare@v3
        with:
          repository: youwol/http-clients
          ref: main
          path: ${{ runner.temp }}/http-clients

      - name: Prepare webpm-client
        id: prepare_webpm-client
        uses: youwol/nestor/ts/prepare@v3
        with:
          repository: youwol/webpm-client
          ref: main
          path: ${{ runner.temp }}/webpm-client

      - name: Prepare vsf-core
        id: prepare_vsf-core
        uses: youwol/nestor/ts/prepare@v3
        with:
          repository: youwol/vsf-core
          ref: main
          path: ${{ runner.temp }}/vsf-core

      - name: Prepare local-youwol-client
        id: prepare_local-youwol-client
        uses: youwol/nestor/ts/prepare@v3
        with:
          repository: youwol/local-youwol-client
          ref: main
          path: ${{ runner.temp }}/local-youwol-client

      - name: Download Configuration Directory
        id: download_conf
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.config_dir }}

      - name: Setup env for py-youwol running
        id: setup_env
        run: |
          echo "PY_YOUWOL_BIN=$(which youwol)" >> "$GITHUB_ENV"
        shell: sh

      - name: Run py-youwol with int conf
        id: run_py-youwol_int_conf
        uses: youwol/nestor/py-youwol/run@v3
        env:
          USERNAME_INTEGRATION_TESTS: ${{ secrets.USERNAME_INTEGRATION_TESTS }}
          PASSWORD_INTEGRATION_TESTS: ${{ secrets.PASSWORD_INTEGRATION_TESTS }}
          # yamllint disable rule:line-length
          USERNAME_INTEGRATION_TESTS_BIS: ${{ secrets.USERNAME_INTEGRATION_TESTS_BIS }}
          PASSWORD_INTEGRATION_TESTS_BIS: ${{ secrets.PASSWORD_INTEGRATION_TESTS_BIS }}
          CLIENT_SECRET_INTEGRATION_TESTS: ${{ secrets.CLIENT_SECRET_INTEGRATION_TESTS }}
          # yamllint enable rule:line-length
        with:
          coverage: false
          conf: ${{ steps.download_conf.outputs.download-path }}/yw_config.py
          name: "log_integration\
          _${{ matrix.install_from }}\
          _${{ matrix.runs_on }}\
          _${{ matrix.python_version }}"

      - name: Tests http-clients
        id: tests_http-clients
        working-directory: ${{ runner.temp }}/http-clients
        run: |
          yarn -s test --reporters=default --reporters=github-actions
        shell: sh

      - name: Tests webpm-client
        id: tests_webpm-client
        working-directory: ${{ runner.temp }}/webpm-client
        run: |
          yarn -s test --reporters=default --reporters=github-actions
        shell: sh

      - name: Tests vsf-core
        id: tests_vsf-core
        working-directory: ${{ runner.temp }}/vsf-core
        run: |
          yarn -s test --reporters=default --reporters=github-actions
        shell: sh

      - name: Tests local-youwol-client
        id: tests_local_youwol_client
        working-directory: ${{ runner.temp }}/local-youwol-client
        run: |
          yarn -s test --reporters=default --reporters=github-actions
        shell: sh
