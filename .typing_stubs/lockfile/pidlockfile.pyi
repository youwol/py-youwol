from . import AlreadyLocked as AlreadyLocked, LockBase as LockBase, LockFailed as LockFailed, LockTimeout as LockTimeout, NotLocked as NotLocked, NotMyLock as NotMyLock
from _typeshed import Incomplete

class PIDLockFile(LockBase):
    unique_name: Incomplete
    def __init__(self, path, threaded: bool = ..., timeout: Incomplete | None = ...) -> None: ...
    def read_pid(self): ...
    def is_locked(self): ...
    def i_am_locking(self): ...
    def acquire(self, timeout: Incomplete | None = ...) -> None: ...
    def release(self) -> None: ...
    def break_lock(self) -> None: ...

def read_pid_from_pidfile(pidfile_path): ...
def write_pid_to_pidfile(pidfile_path) -> None: ...
def remove_existing_pidfile(pidfile_path) -> None: ...
