# third parties
from _typeshed import Incomplete

basestring = basestring
unicode = unicode
basestring = str
unicode = str
__metaclass__ = type

class DaemonError(Exception):
    def __init__(self, *args, **kwargs) -> None: ...

class DaemonOSEnvironmentError(DaemonError, OSError): ...
class DaemonProcessDetachError(DaemonError, OSError): ...

class DaemonContext:
    chroot_directory: Incomplete
    working_directory: Incomplete
    umask: Incomplete
    prevent_core: Incomplete
    files_preserve: Incomplete
    pidfile: Incomplete
    stdin: Incomplete
    stdout: Incomplete
    stderr: Incomplete
    uid: Incomplete
    gid: Incomplete
    initgroups: Incomplete
    detach_process: Incomplete
    signal_map: Incomplete
    def __init__(
        self,
        chroot_directory: Incomplete | None = ...,
        working_directory: str = ...,
        umask: int = ...,
        uid: Incomplete | None = ...,
        gid: Incomplete | None = ...,
        initgroups: bool = ...,
        prevent_core: bool = ...,
        detach_process: Incomplete | None = ...,
        files_preserve: Incomplete | None = ...,
        pidfile: Incomplete | None = ...,
        stdin: Incomplete | None = ...,
        stdout: Incomplete | None = ...,
        stderr: Incomplete | None = ...,
        signal_map: Incomplete | None = ...,
    ) -> None: ...
    @property
    def is_open(self): ...
    def open(self) -> None: ...
    def __enter__(self): ...
    def close(self) -> None: ...
    def __exit__(self, exc_type, exc_value, traceback) -> None: ...
    def terminate(self, signal_number, stack_frame) -> None: ...

def get_stream_file_descriptors(stdin=..., stdout=..., stderr=...): ...
def change_working_directory(directory) -> None: ...
def change_root_directory(directory) -> None: ...
def change_file_creation_mask(mask) -> None: ...
def get_username_for_uid(uid): ...
def change_process_owner(uid, gid, initgroups: bool = ...) -> None: ...
def prevent_core_dump() -> None: ...
def detach_process_context() -> None: ...
def is_process_started_by_init(): ...
def is_socket(fd): ...
def is_process_started_by_superserver(): ...
def is_detach_process_context_required(): ...
def close_file_descriptor_if_open(fd) -> None: ...

MAXFD: int

def get_maximum_file_descriptors(): ...
def close_all_open_files(exclude: Incomplete | None = ...) -> None: ...
def redirect_stream(system_stream, target_stream) -> None: ...
def make_default_signal_map(): ...
def set_signal_handlers(signal_handler_map) -> None: ...
def register_atexit_function(func) -> None: ...
