# third parties
from _typeshed import Incomplete
from django.db import models

# relative
from . import base as base

class SemVerField(models.CharField):
    def __init__(self, *args, **kwargs) -> None: ...
    def from_db_value(self, value, expression, connection, *args): ...
    def get_prep_value(self, obj): ...
    def get_db_prep_value(self, value, connection, prepared: bool = ...): ...
    def value_to_string(self, obj): ...
    def run_validators(self, value): ...

class VersionField(SemVerField):
    default_error_messages: Incomplete
    description: Incomplete
    partial: Incomplete
    coerce: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def deconstruct(self): ...
    def to_python(self, value): ...

class SpecField(SemVerField):
    default_error_messages: Incomplete
    description: Incomplete
    syntax: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def deconstruct(self): ...
    def to_python(self, value): ...
