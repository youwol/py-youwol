from .sse import Sse as Sse, SseCustomerKey as SseCustomerKey
from .time import to_iso8601utc as to_iso8601utc
from _typeshed import Incomplete
from threading import Thread

MAX_MULTIPART_COUNT: int
MAX_MULTIPART_OBJECT_SIZE: Incomplete
MAX_PART_SIZE: Incomplete
MIN_PART_SIZE: Incomplete

def quote(resource, safe: str = ..., encoding: Incomplete | None = ..., errors: Incomplete | None = ...): ...
def queryencode(query, safe: str = ..., encoding: Incomplete | None = ..., errors: Incomplete | None = ...): ...
def headers_to_strings(headers, titled_key: bool = ...): ...
def get_part_info(object_size, part_size): ...
def read_part_data(stream, size, part_data: bytes = ..., progress: Incomplete | None = ...): ...
def makedirs(path) -> None: ...
def check_bucket_name(bucket_name, strict: bool = ...) -> None: ...
def check_non_empty_string(string) -> None: ...
def is_valid_policy_type(policy): ...
def check_ssec(sse) -> None: ...
def check_sse(sse) -> None: ...
def md5sum_hash(data): ...
def sha256_hash(data): ...
def url_replace(url, scheme: Incomplete | None = ..., netloc: Incomplete | None = ..., path: Incomplete | None = ..., query: Incomplete | None = ..., fragment: Incomplete | None = ...): ...
def normalize_headers(headers): ...
def genheaders(headers, sse, tags, retention, legal_hold): ...

class BaseURL:
    def __init__(self, endpoint, region) -> None: ...
    @property
    def region(self): ...
    @property
    def is_https(self): ...
    @property
    def host(self): ...
    @property
    def is_aws_host(self): ...
    @property
    def accelerate_host_flag(self): ...
    @accelerate_host_flag.setter
    def accelerate_host_flag(self, flag) -> None: ...
    @property
    def dualstack_host_flag(self): ...
    @dualstack_host_flag.setter
    def dualstack_host_flag(self, flag) -> None: ...
    @property
    def virtual_style_flag(self): ...
    @virtual_style_flag.setter
    def virtual_style_flag(self, flag) -> None: ...
    def build(self, method, region, bucket_name: Incomplete | None = ..., object_name: Incomplete | None = ..., query_params: Incomplete | None = ...): ...

class ObjectWriteResult:
    def __init__(self, bucket_name, object_name, version_id, etag, http_headers, last_modified: Incomplete | None = ..., location: Incomplete | None = ...) -> None: ...
    @property
    def bucket_name(self): ...
    @property
    def object_name(self): ...
    @property
    def version_id(self): ...
    @property
    def etag(self): ...
    @property
    def http_headers(self): ...
    @property
    def last_modified(self): ...
    @property
    def location(self): ...

class Worker(Thread):
    def __init__(self, tasks_queue, results_queue, exceptions_queue) -> None: ...
    def run(self) -> None: ...

class ThreadPool:
    def __init__(self, num_threads) -> None: ...
    def add_task(self, func, *args, **kargs) -> None: ...
    def start_parallel(self) -> None: ...
    def result(self): ...
