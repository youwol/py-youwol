from .xml import Element as Element, SubElement as SubElement, findall as findall, findtext as findtext
from _typeshed import Incomplete

class DeleteObject:
    def __init__(self, name, version_id: Incomplete | None = ...) -> None: ...
    def toxml(self, element): ...

class DeleteRequest:
    def __init__(self, object_list, quiet: bool = ...) -> None: ...
    def toxml(self, element): ...

class DeletedObject:
    def __init__(self, name, version_id, delete_marker, delete_marker_version_id) -> None: ...
    @property
    def name(self): ...
    @property
    def version_id(self): ...
    @property
    def delete_marker(self): ...
    @property
    def delete_marker_version_id(self): ...
    @classmethod
    def fromxml(cls, element): ...

class DeleteError:
    def __init__(self, code, message, name, version_id) -> None: ...
    @property
    def code(self): ...
    @property
    def message(self): ...
    @property
    def name(self): ...
    @property
    def version_id(self): ...
    @classmethod
    def fromxml(cls, element): ...

class DeleteResult:
    def __init__(self, object_list, error_list) -> None: ...
    @property
    def object_list(self): ...
    @property
    def error_list(self): ...
    @classmethod
    def fromxml(cls, element): ...
