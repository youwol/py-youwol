from async_exit_stack import AsyncExitStack as AsyncExitStack
from collections.abc import AsyncIterator

def aiter(obj): ...
def anext(obj): ...
async def await_(obj): ...
def async_(fn): ...
def is_async_iterable(obj): ...
def assert_async_iterable(obj) -> None: ...
def is_async_iterator(obj): ...
def assert_async_iterator(obj) -> None: ...

class AsyncIteratorContext(AsyncIterator):
    def __init__(self, aiterator) -> None: ...
    def __aiter__(self): ...
    def __anext__(self): ...
    async def __aenter__(self): ...
    async def __aexit__(self, typ, value, traceback): ...
    async def aclose(self) -> None: ...
    async def athrow(self, exc): ...

def aitercontext(aiterable, *, cls=...): ...
